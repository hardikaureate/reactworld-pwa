{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/ChakraUI/reactworld-pwa/src/shop_component/ProductPage.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './../assets/CSS/productpage.css';\nimport { ShopContext } from '../context/ShopContext';\nimport { Grid, Image, Text, Heading, Flex } from '@chakra-ui/react';\nimport Skeleton from 'react-loading-skeleton';\nimport NumberInput from './NumberInput';\nimport Slider from \"react-slick\";\nimport Zoom from 'react-medium-image-zoom';\n\nconst ProductPage = () => {\n  const width = window.innerWidth;\n  console.log(width);\n  const {\n    handle\n  } = useParams();\n  const {\n    fetchProductWithHandle,\n    addItemToCheckout,\n    product\n  } = useContext(ShopContext);\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 2000);\n    fetchProductWithHandle(handle);\n  }, [fetchProductWithHandle, handle]);\n  const [imageclick, setImageclick] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [productQuantity, setProductQuantity] = React.useState(1);\n\n  const handleProductQuantity = (quantityAsString, quantityAsNumber) => {\n    setProductQuantity(quantityAsNumber);\n  };\n\n  let extractedInfo = \"\";\n\n  if (product.id) {\n    const buff = Buffer.from(product === null || product === void 0 ? void 0 : product.id, 'base64');\n    const decodedId = buff.toString('ascii');\n    extractedInfo = decodedId.split(/[\\s/]+/).pop();\n  } //console.log('review-->', product)\n\n\n  const settings = {\n    dots: false,\n    arrows: false,\n    infinite: true,\n    slidesToShow: 4,\n    vertical: true,\n    verticalSwiping: true,\n    slidesToScroll: 1,\n    autoplay: true,\n    speed: 1000,\n    autoplaySpeed: 500,\n    focusOnSelect: true\n  };\n  const mobsettings = {\n    dots: false,\n    arrows: false,\n    infinite: true,\n    vertical: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    speed: 3000,\n    autoplaySpeed: 200,\n    focusOnSelect: true\n  };\n  if (!product.title) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, \"Loading\\u2026\")); //if (!product.title) return <div><div class=\"spinner\"><div class=\"spinner spinner2\"><div class=\"spinner spinner3\"></div></div></div></div>\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner pdppage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"box alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"productMobile\",\n    templateColumns: [\"repeat(1, 1fr)\", \"repeat(2, 1fr)\"],\n    m: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"proLeft productImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imagewithmetaimage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }\n  }, width > 767 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Flex, {\n    className: \"productImg\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 49\n    }\n  }, width < 767 ? loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    width: 343,\n    height: 365,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 79\n    }\n  }) : /*#__PURE__*/React.createElement(Image, {\n    src: product.images[imageclick].src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 119\n    }\n  }) : loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    width: 650,\n    height: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 70\n    }\n  }) : /*#__PURE__*/React.createElement(Zoom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 110\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: product.images[imageclick].src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 116\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bigprolist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 49\n    }\n  }, product.images && product.images.map((item, index) => {\n    return loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      width: 90,\n      height: 70,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 74\n      }\n    }) : /*#__PURE__*/React.createElement(Image, {\n      key: index,\n      src: item && item.src,\n      alt: \"sacheu\",\n      onClick: () => setImageclick(index),\n      className: \"prodmetaImages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 112\n      }\n    });\n  }))) : /*#__PURE__*/React.createElement(Slider, Object.assign({}, mobsettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 45\n    }\n  }), product.images && product.images.map((item, index) => {\n    return loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      width: 90,\n      height: 70,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 70\n      }\n    }) : /*#__PURE__*/React.createElement(Image, {\n      key: index,\n      src: item && item.src,\n      alt: \"sacheu\",\n      onClick: () => setImageclick(index),\n      className: \"prodmetaImages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 108\n      }\n    });\n  })))), /*#__PURE__*/React.createElement(Flex, {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    px: \"2rem\",\n    className: \"pdpmeta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    pb: \"2rem\",\n    className: \"PDP_productTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, width < 767 ? loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    width: 365,\n    height: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 58\n    }\n  }) : `${product.title}` : loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    width: 650,\n    height: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 58\n    }\n  }) : `${product.title}`), /*#__PURE__*/React.createElement(Text, {\n    className: \"PDP_cartprice\",\n    fontWeight: \"bold\",\n    pb: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    width: 75,\n    height: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 108\n    }\n  }) : `$${product.variants[0].price}`), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    className: \"prosreview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"yotpo bottomLine\",\n    \"data-product-id\": extractedInfo,\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Text, {\n    pb: \"2rem\",\n    color: \"gray.500\",\n    className: \"propagedesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, width < 767 ? loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    width: 365,\n    height: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 58\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: product.description\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 98\n    }\n  }) : loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    width: 650,\n    height: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 58\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: product.description\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 98\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"klarnaText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, \"4 interest-free payments of $6.00. \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 76\n    }\n  }, \"Klarna\"), \" Learn more\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cartgroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Container cartInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(NumberInput, {\n    inputProps: {\n      'aria-label': 'Product quantity'\n    },\n    onChange: handleProductQuantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Container cart-btn cartsize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 41\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    height: 42,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 56\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \" animate__zoomIn animate__animated\",\n    onClick: () => addItemToCheckout(product.variants[0].id, 1),\n    quantity: productQuantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 83\n    }\n  }, \"Add To Cart\"))))))))));\n};\n\nexport default ProductPage;","map":{"version":3,"sources":["/home/ubuntu/Desktop/ChakraUI/reactworld-pwa/src/shop_component/ProductPage.js"],"names":["React","useEffect","useState","useContext","useParams","ShopContext","Grid","Image","Text","Heading","Flex","Skeleton","NumberInput","Slider","Zoom","ProductPage","width","window","innerWidth","console","log","handle","fetchProductWithHandle","addItemToCheckout","product","setTimeout","setLoading","imageclick","setImageclick","loading","productQuantity","setProductQuantity","handleProductQuantity","quantityAsString","quantityAsNumber","extractedInfo","id","buff","Buffer","from","decodedId","toString","split","pop","settings","dots","arrows","infinite","slidesToShow","vertical","verticalSwiping","slidesToScroll","autoplay","speed","autoplaySpeed","focusOnSelect","mobsettings","title","images","src","map","item","index","variants","price","textAlign","display","__html","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport './../assets/CSS/productpage.css'\nimport { ShopContext } from '../context/ShopContext'\nimport { Grid, Image, Text, Heading, Flex } from '@chakra-ui/react'\nimport Skeleton from 'react-loading-skeleton'\nimport NumberInput from './NumberInput'\nimport Slider from \"react-slick\"\nimport Zoom from 'react-medium-image-zoom'\n\nconst ProductPage = () => {\n    const width = window.innerWidth\n    console.log(width)\n    const { handle } = useParams()\n    const { fetchProductWithHandle, addItemToCheckout, product } = useContext(ShopContext)\n    useEffect(() => {\n        setTimeout(() => setLoading(false), 2000)\n        fetchProductWithHandle(handle)\n    }, [fetchProductWithHandle, handle])\n\n    const [imageclick, setImageclick] = useState(0)\n    const [loading, setLoading] = useState(true)\n    const [productQuantity, setProductQuantity] = React.useState(1)\n    const handleProductQuantity = (quantityAsString, quantityAsNumber) => {\n        setProductQuantity(quantityAsNumber)\n    }\n\n    let extractedInfo = \"\";\n    if (product.id) {\n        const buff = Buffer.from(product?.id, 'base64');\n        const decodedId = buff.toString('ascii');\n        extractedInfo = decodedId.split(/[\\s/]+/).pop();\n    }\n    //console.log('review-->', product)\n\n    const settings = {\n        dots: false,\n        arrows: false,\n        infinite: true,\n        slidesToShow: 4,\n        vertical: true,\n        verticalSwiping: true,\n        slidesToScroll: 1,\n        autoplay: true,\n        speed: 1000,\n        autoplaySpeed: 500,\n        focusOnSelect: true,\n    }\n    const mobsettings = {\n        dots: false,\n        arrows: false,\n        infinite: true, vertical: true,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: true,\n        speed: 3000,\n        autoplaySpeed: 200,\n        focusOnSelect: true,\n    }\n\n    if (!product.title) return <div><div class=\"loading\">Loading&#8230;</div></div>\n    //if (!product.title) return <div><div class=\"spinner\"><div class=\"spinner spinner2\"><div class=\"spinner spinner3\"></div></div></div></div>\n\n    return (\n        <>\n            <div id=\"wrapper\">\n                <section id=\"two\">\n                    <div className=\"inner pdppage\">\n                        <div class=\"box alt\">\n\n                            <Grid className=\"productMobile\" templateColumns={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\"]} m=\"auto\">\n\n                                <div className=\"proLeft productImage\">\n                                    {/* <div className=\"imageThumbnail\">\n                                         {product.images && product.images.map((item, i) => {\n                                                return loading ? <Skeleton width={90} height={70} /> : <Image key={i} onClick={() => setImageclick(i)} className=\"productMainImage\" src={item && item.src} width=\"10%\" height=\"auto\" />\n                                            })} \n\n                                        <Slider {...settings}>\n                                            {product.images && product.images.map((item, index) => {\n                                                return loading ? <Skeleton width={90} height={70} /> : <Image key={index} src={item && item.src} alt=\"sacheu\" onClick={() => setImageclick(index)} className=\"prodmetaImages\" />\n                                            })}\n                                        </Slider>\n                                    </div> */}\n                                    <div className=\"imagewithmetaimage\">\n\n                                        {width > 767 ? (\n                                            <>\n                                                <Flex className=\"productImg\" justifyContent=\"center\" alignItems=\"center\">\n                                                    {width < 767 ? (loading ? <Skeleton width={343} height={365} /> : <Image src={product.images[imageclick].src} />)\n                                                        : (loading ? <Skeleton width={650} height={600} /> : <Zoom><Image src={product.images[imageclick].src} /></Zoom>)\n                                                    }\n                                                </Flex>\n                                                <div className=\"bigprolist\">\n                                                    {product.images && product.images.map((item, index) => {\n                                                        return loading ? <Skeleton width={90} height={70} /> : <Image key={index} src={item && item.src} alt=\"sacheu\" onClick={() => setImageclick(index)} className=\"prodmetaImages\" />\n                                                    })}\n                                                </div>\n                                            </>\n                                        )\n                                            :\n                                            <Slider {...mobsettings}>\n                                                {product.images && product.images.map((item, index) => {\n                                                    return loading ? <Skeleton width={90} height={70} /> : <Image key={index} src={item && item.src} alt=\"sacheu\" onClick={() => setImageclick(index)} className=\"prodmetaImages\" />\n                                                })}\n                                            </Slider>\n                                        }\n\n                                    </div>\n                                </div>\n\n\n                                <Flex flexDirection=\"column\" justifyContent=\"center\" px=\"2rem\" className=\"pdpmeta\">\n                                    <Heading pb=\"2rem\" className=\"PDP_productTitle\">\n                                        {width < 767\n                                            ? (loading ? <Skeleton width={365} height={70} /> : `${product.title}`)\n                                            : (loading ? <Skeleton width={650} height={70} /> : `${product.title}`)\n                                        }\n                                    </Heading>\n\n                                    {/* <Heading pb=\"2rem\" className=\"PDP_productTitle\">{product.id}</Heading> */}\n                                    <Text className=\"PDP_cartprice\" fontWeight=\"bold\" pb=\"1rem\">{loading ? <Skeleton width={75} height={70} /> : `$${product.variants[0].price}`}</Text>\n\n                                    {/* <div style={{ textAlign: 'center' }} className=\"prosreview\">\n                                        <div class=\"yotpo bottomLine\" data-product-id={product.id} style={{ display: 'inline-block' }}></div>\n                                    </div>\n\n                                    <div style={{ textAlign: 'center' }}>\n                                        <div class=\"yotpo bottomLine\" data-product-id=\"4746070032433\" style={{ display: 'inline-block' }}></div>\n                                    </div> */}\n                                    <Text>\n                                        <div style={{ textAlign: 'center' }} className=\"prosreview\">\n                                            <div class=\"yotpo bottomLine\" data-product-id={extractedInfo} style={{ display: 'inline-block' }}></div>\n                                        </div>\n                                    </Text>\n\n                                    <Text pb=\"2rem\" color=\"gray.500\" className=\"propagedesc\">\n                                        {width < 767\n                                            ? (loading ? <Skeleton width={365} height={200} /> : <div dangerouslySetInnerHTML={{ __html: product.description }}></div>)\n                                            : (loading ? <Skeleton width={650} height={200} /> : <div dangerouslySetInnerHTML={{ __html: product.description }}></div>)\n                                        }\n                                    </Text>\n\n                                    <div className=\"klarnaText\">\n                                        4 interest-free payments of $6.00. <strong>Klarna</strong> Learn more\n                                    </div>\n\n                                    <div className=\"cartgroup\">\n                                        <div className=\"Container cartInput\">\n                                            <NumberInput inputProps={{ 'aria-label': 'Product quantity' }} onChange={handleProductQuantity} />\n                                        </div>\n                                        <div className=\"Container cart-btn cartsize\">\n                                            {loading ? <Skeleton height={42} /> : <button className=\" animate__zoomIn animate__animated\" onClick={() => addItemToCheckout(product.variants[0].id, 1)} quantity={productQuantity}>Add To Cart</button>}\n                                        </div>\n                                    </div>\n                                </Flex>\n                            </Grid>\n\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </>\n    )\n}\n\nexport default ProductPage\n"]},"metadata":{},"sourceType":"module"}