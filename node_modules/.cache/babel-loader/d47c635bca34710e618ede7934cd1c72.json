{"ast":null,"code":"import _regeneratorRuntime from\"/home/ubuntu/Desktop/ChakraUI/reactworld-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/ubuntu/Desktop/ChakraUI/reactworld-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/ubuntu/Desktop/ChakraUI/reactworld-pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SidebarGitUserInfo=function SidebarGitUserInfo(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var getUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,gitInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('https://api.github.com/users/hardikaureate');case 3:response=_context.sent;setLoading(false);_context.t0=setUsers;_context.next=8;return response.json();case 8:_context.t1=_context.sent;(0,_context.t0)(_context.t1);localStorage.setItem(\"GitUser\",JSON.stringify(users));_context.next=19;break;case 13:_context.prev=13;_context.t2=_context[\"catch\"](0);gitInfo=localStorage.getItem(\"GitUser\");setUsers(JSON.parse(gitInfo));setLoading(false);console.log(\"my error is \"+_context.t2);case 19:case\"end\":return _context.stop();}}},_callee,null,[[0,13]]);}));return function getUsers(){return _ref.apply(this,arguments);};}();useEffect(function(){getUsers();},[]);if(loading)return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{class:\"loading\",children:\"Loading\\u2026\"})});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"section\",{className:\"github--profile\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"gitblocktitle\",children:\"GitHub Profiles\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"github--profile__info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"gitImage\",children:/*#__PURE__*/_jsx(\"img\",{src:users.avatar_url,alt:\"img\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"gitName\",children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(\"a\",{href:users.html_url,children:users.name})}),/*#__PURE__*/_jsx(\"h4\",{children:users.bio})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"github--profile__state\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"a\",{href:\"\".concat(users.html_url,\"?tab=followers\"),children:[/*#__PURE__*/_jsx(\"p\",{children:users.followers}),/*#__PURE__*/_jsx(\"span\",{children:\"Followers\"})]})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"a\",{href:\"\".concat(users.html_url,\"?tab=repositories\"),children:[/*#__PURE__*/_jsx(\"p\",{children:users.public_repos}),/*#__PURE__*/_jsx(\"span\",{children:\"Repositoriy\"})]})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"a\",{href:\"\".concat(users.html_url,\"?tab=following\"),children:[/*#__PURE__*/_jsx(\"p\",{children:users.following}),/*#__PURE__*/_jsx(\"span\",{children:\"Following\"})]})})]})})]})});};export default SidebarGitUserInfo;","map":{"version":3,"sources":["/home/ubuntu/Desktop/ChakraUI/reactworld-pwa/src/components/SidebarGitUserInfo.js"],"names":["React","useState","useEffect","SidebarGitUserInfo","users","setUsers","loading","setLoading","getUsers","fetch","response","json","localStorage","setItem","JSON","stringify","gitInfo","getItem","parse","console","log","avatar_url","html_url","name","bio","followers","public_repos","following"],"mappings":"seAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,6IAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7B,cAA0BF,QAAQ,CAAC,EAAD,CAAlC,wCAAOG,KAAP,eAAcC,QAAd,eACA,eAA8BJ,QAAQ,CAAC,IAAD,CAAtC,yCAAOK,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,QAAQ,0FAAG,8LAEcC,CAAAA,KAAK,CAAC,4CAAD,CAFnB,QAEHC,QAFG,eAGTH,UAAU,CAAC,KAAD,CAAV,CAHS,YAITF,QAJS,uBAIMK,CAAAA,QAAQ,CAACC,IAAT,EAJN,+DAKTC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAA+BC,IAAI,CAACC,SAAL,CAAeX,KAAf,CAA/B,EALS,iFAOLY,OAPK,CAOIJ,YAAY,CAACK,OAAb,CAAqB,SAArB,CAPJ,CAQTZ,QAAQ,CAACS,IAAI,CAACI,KAAL,CAAWF,OAAX,CAAD,CAAR,CACAT,UAAU,CAAC,KAAD,CAAV,CACAY,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAVS,qEAAH,kBAARZ,CAAAA,QAAQ,0CAAd,CAcAN,SAAS,CAAC,UAAM,CACZM,QAAQ,GACX,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAIF,OAAJ,CAAa,mBAAO,kCAAK,YAAK,KAAK,CAAC,SAAX,2BAAL,EAAP,CAEb,mBACI,sCACI,iBAAS,SAAS,CAAC,iBAAnB,wBACI,WAAI,SAAS,CAAC,eAAd,6BADJ,cAEI,aAAK,SAAS,CAAC,uBAAf,wBACI,YAAK,SAAS,CAAC,UAAf,uBACI,YAAK,GAAG,CAAEF,KAAK,CAACiB,UAAhB,CAA4B,GAAG,CAAC,KAAhC,EADJ,EADJ,cAII,aAAK,SAAS,CAAC,SAAf,wBACI,iCAAI,UAAG,IAAI,CAAEjB,KAAK,CAACkB,QAAf,UAA0BlB,KAAK,CAACmB,IAAhC,EAAJ,EADJ,cAEI,oBAAKnB,KAAK,CAACoB,GAAX,EAFJ,GAJJ,GAFJ,cAWI,YAAK,SAAS,CAAC,wBAAf,uBACI,mCACI,iCAAI,WAAG,IAAI,WAAKpB,KAAK,CAACkB,QAAX,kBAAP,wBAA4C,mBAAIlB,KAAK,CAACqB,SAAV,EAA5C,cAAoE,mCAApE,GAAJ,EADJ,cAEI,iCAAI,WAAG,IAAI,WAAKrB,KAAK,CAACkB,QAAX,qBAAP,wBAA+C,mBAAIlB,KAAK,CAACsB,YAAV,EAA/C,cAA0E,qCAA1E,GAAJ,EAFJ,cAGI,iCAAI,WAAG,IAAI,WAAKtB,KAAK,CAACkB,QAAX,kBAAP,wBAA4C,mBAAIlB,KAAK,CAACuB,SAAV,EAA5C,cAAoE,mCAApE,GAAJ,EAHJ,GADJ,EAXJ,GADJ,EADJ,CAuBH,CA/CD,CAiDA,cAAexB,CAAAA,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst SidebarGitUserInfo = () => {\n    const [users, setUsers] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const getUsers = async () => {\n        try {\n            const response = await fetch('https://api.github.com/users/hardikaureate')\n            setLoading(false)\n            setUsers(await response.json())\n            localStorage.setItem(\"GitUser\",JSON.stringify(users))\n        } catch (error) {\n            let gitInfo= localStorage.getItem(\"GitUser\")\n            setUsers(JSON.parse(gitInfo))\n            setLoading(false)\n            console.log(\"my error is \" + error)\n        }\n    }\n\n    useEffect(() => {\n        getUsers()\n    }, [])\n\n    if (loading) return <div><div class=\"loading\">Loading&#8230;</div></div>\n\n    return (\n        <>\n            <section className=\"github--profile\">\n                <h3 className=\"gitblocktitle\">GitHub Profiles</h3>\n                <div className=\"github--profile__info\">\n                    <div className=\"gitImage\">\n                        <img src={users.avatar_url} alt=\"img\" />\n                    </div>\n                    <div className=\"gitName\">\n                        <h3><a href={users.html_url}>{users.name}</a></h3>\n                        <h4>{users.bio}</h4>\n                    </div>\n                </div>\n                <div className=\"github--profile__state\">\n                    <ul>\n                        <li><a href={`${users.html_url}?tab=followers`}><p>{users.followers}</p><span>Followers</span></a></li>\n                        <li><a href={`${users.html_url}?tab=repositories`}><p>{users.public_repos}</p><span>Repositoriy</span></a></li>\n                        <li><a href={`${users.html_url}?tab=following`}><p>{users.following}</p><span>Following</span></a></li>\n                    </ul>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default SidebarGitUserInfo"]},"metadata":{},"sourceType":"module"}