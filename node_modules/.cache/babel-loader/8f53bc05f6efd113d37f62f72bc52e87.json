{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/ChakraUI/reactworld-pwa/src/components/model/Model.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport styles from \"./modal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = ({\n  modalStyle,\n  children,\n  show,\n  onClose,\n  backdropStyle\n}) => {\n  _s();\n\n  const modalRef = useRef(null);\n  useEffect(() => {\n    if (show) {\n      modalRef.current.classList.add(styles.visible);\n    } else {\n      modalRef.current.classList.remove(styles.visible);\n    }\n  }, [show]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: modalRef,\n      style: backdropStyle,\n      className: `${styles.modal}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        style: {\n          width: 60,\n          height: 40,\n          position: \"absolute\",\n          top: 50,\n          right: 0,\n          margin: \"1rem\",\n          cursor: \"pointer\",\n          boxShadow: 'none'\n        },\n        className: styles.close__btn,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"far fa-times-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: styles.modal__wrap,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Modal, \"iXNJws+mDn9J+ZcpHudMXHGV85c=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/ChakraUI/reactworld-pwa/src/components/model/Model.js"],"names":["React","useEffect","useRef","styles","Modal","modalStyle","children","show","onClose","backdropStyle","modalRef","current","classList","add","visible","remove","modal","width","height","position","top","right","margin","cursor","boxShadow","close__btn","modal__wrap"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,OAA9B;AAAuCC,EAAAA;AAAvC,CAAD,KAA4D;AAAA;;AACxE,QAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,IAAJ,EAAU;AACRG,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,SAAjB,CAA2BC,GAA3B,CAA+BV,MAAM,CAACW,OAAtC;AACD,KAFD,MAEO;AACLJ,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,SAAjB,CAA2BG,MAA3B,CAAkCZ,MAAM,CAACW,OAAzC;AACD;AACF,GANQ,EAMN,CAACP,IAAD,CANM,CAAT;AAOA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEG,QAAV;AAAoB,MAAA,KAAK,EAAED,aAA3B;AAA0C,MAAA,SAAS,EAAG,GAAEN,MAAM,CAACa,KAAM,EAArE;AAAA,8BACE;AACE,QAAA,OAAO,EAAER,OADX;AAEE,QAAA,KAAK,EAAE;AACLS,UAAAA,KAAK,EAAE,EADF;AAELC,UAAAA,MAAM,EAAE,EAFH;AAGLC,UAAAA,QAAQ,EAAE,UAHL;AAILC,UAAAA,GAAG,EAAE,EAJA;AAKLC,UAAAA,KAAK,EAAE,CALF;AAMLC,UAAAA,MAAM,EAAE,MANH;AAOLC,UAAAA,MAAM,EAAE,SAPH;AAQLC,UAAAA,SAAS,EAAC;AARL,SAFT;AAYE,QAAA,SAAS,EAAErB,MAAM,CAACsB,UAZpB;AAAA,+BAeE;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE;AAAK,QAAA,KAAK,EAAEpB,UAAZ;AAAwB,QAAA,SAAS,EAAEF,MAAM,CAACuB,WAA1C;AAAA,kBACGpB;AADH;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAnCD;;GAAMF,K;;KAAAA,K;AAqCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport styles from \"./modal.module.css\";\n\nconst Modal = ({ modalStyle, children, show, onClose, backdropStyle }) => {\n  const modalRef = useRef(null);\n  useEffect(() => {\n    if (show) {\n      modalRef.current.classList.add(styles.visible);\n    } else {\n      modalRef.current.classList.remove(styles.visible);\n    }\n  }, [show]);\n  return (\n    <React.Fragment>\n      <div ref={modalRef} style={backdropStyle} className={`${styles.modal}`}>\n        <button\n          onClick={onClose}\n          style={{\n            width: 60,\n            height: 40,\n            position: \"absolute\",\n            top: 50,\n            right: 0,\n            margin: \"1rem\",\n            cursor: \"pointer\",\n            boxShadow:'none'\n          }}\n          className={styles.close__btn}\n        >\n          \n          <i class=\"far fa-times-circle\"></i>\n        </button>\n        <div style={modalStyle} className={styles.modal__wrap}>\n          {children}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}