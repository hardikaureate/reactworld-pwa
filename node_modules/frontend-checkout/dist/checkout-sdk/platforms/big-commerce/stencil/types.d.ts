/**
 * this type should match:
 * https://developer.bigcommerce.com/api-reference/storefront/carts/cart/getacart#responses
 */
declare type BigCommerceStencilCart = {
    id: string;
    customer_id: number;
    email: string;
    currency: {
        code: string;
    };
    isTaxIncluded: boolean;
    baseAmount: number;
    discountAmount: number;
    cartAmount: number;
    lineItems: BigCommerceStencilLineItems;
};
interface BigCommerceStencilLineItems {
    customItems: BigCommerceStencilCartItem[];
    digitalItems: BigCommerceStencilCartItem[];
    giftCertificates: BigCommerceStencilCartItem[];
    physicalItems: BigCommerceStencilCartItem[];
}
interface BigCommerceStencilCartItem {
    id: string;
    brand: string;
    name: string;
    imageUrl: string;
    options: BigCommerceStencilCartItemOption[];
    couponAmount: number;
    discountAmount: number;
    discounts: {
        id: string;
        discountedAmount: number;
    }[];
    extendedListPrice: number;
    extendedSalePrice: number;
    listPrice: number;
    salePrice: number;
    parentId: number;
    quantity: number;
    productId: number;
    sku: string;
    url: string;
    variantId: number;
    isTaxable: boolean;
    isShippingRequired?: boolean;
    giftWrapping?: {
        name: string;
        message: string;
        amount: number;
    } | null;
}
interface BigCommerceStencilLineItem {
    id: string;
    productId: number;
    variantId: number;
    quantity: number;
    optionSelections: BigCommerceStencilLineItemOptionSelection[];
}
interface BigCommerceStencilCartItemOption {
    name: string;
    value: string;
    nameId: number;
    valueId: number | string;
}
interface BigCommerceStencilLineItemOptionSelection {
    optionId: number;
    optionValue: number | string;
}
interface BigCommerceStencilGiftCertificate {
    balance: number;
    code: string;
    purchaseDate: string;
    remaining: number;
    used: number;
}
interface BigCommerceStencilCoupon {
    id: string | number;
    code: string;
    displayName?: string;
    couponType: number;
    discountedAmount: number;
}
interface BigCommerceStencilCheckout {
    id: string;
    cart: BigCommerceStencilCart;
    taxTotal: number;
    subtotal: number;
    grandTotal: number;
    giftCertificates: BigCommerceStencilGiftCertificate[];
    coupons: BigCommerceStencilCoupon[];
}
export { BigCommerceStencilCheckout, BigCommerceStencilCart, BigCommerceStencilLineItems, BigCommerceStencilLineItem, BigCommerceStencilCartItem, BigCommerceStencilCartItemOption, };
