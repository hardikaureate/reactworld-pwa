import { LineItem } from '../../../../types';
interface ShopifyStorefrontLineItem {
    id: string | number;
    quantity: number;
    title: string;
    variant?: ShopifyStorefrontProductVariantWithProduct | null;
    customAttributes: {
        key: string;
        value: string;
    }[];
    discountAllocations: {
        allocatedAmount: MoneyV2;
        discountApplication: DiscountApplication;
    }[];
    onlineStoreUrl?: string;
    attrs?: any;
}
interface DiscountApplication {
    targetSelection: 'ALL' | 'ENTITLED' | 'EXPLICIT';
    allocationMethod: 'ACROSS' | 'EACH';
    targetType: 'LINE_ITEM' | 'SHIPPING_LINE';
    value: MoneyV2 | {
        percentage: number;
    };
    title: string | null | undefined;
    description: string | null | undefined;
    code: string | null | undefined;
    applicable: string | null | undefined;
}
interface ShopifyStorefrontCart {
    checkoutUrl: string;
    id: string | number;
    lineItemCount: number;
    lineItems: ShopifyStorefrontLineItem[];
    subtotalPrice: string;
    completedAt: string | null;
    webUrl: string;
    subtotalPriceV2: {
        amount: string;
        currencyCode: string;
    };
    totalPriceV2: {
        amount: string;
        currencyCode: string;
    };
}
interface ShopifyStorefrontProductTrackingData {
    id: string;
    name: string;
    brand: string;
    price: number;
    quantity: number;
    variant?: string;
    compareAtPrice?: number;
}
interface Meta {
    storeId: string;
    storeName: string;
    sharedCheckoutDomains?: string[];
}
export interface Image {
    id: string;
    src: string;
    altText: string;
}
export interface ImageVariant extends Image {
    name: string;
    dimensions: string;
    src: string;
}
export interface OptionValue {
    name: string;
    option_id: string;
    value: any;
}
export interface Option {
    name: string;
    selected: string;
    values: Array<OptionValue>;
}
export interface MoneyV2 {
    amount: string;
    currencyCode: string;
}
export declare type MeasuredType = 'VOLUME' | 'WEIGHT' | 'LENGTH' | 'AREA';
export declare type UnitOfMeasurement = 'ML' | 'CL' | 'L' | 'M3' | 'MG' | 'G' | 'KG' | 'MM' | 'CM' | 'M' | 'M2';
export interface ShopifyStorefrontProductVariant {
    id: string | number;
    title: string;
    price: string;
    priceV2: MoneyV2;
    presentmentPrices: {
        price: MoneyV2;
        compareAtPrice: MoneyV2;
    }[];
    weight: number;
    availableForSale: boolean;
    sku: string;
    compareAtPrice: string;
    compareAtPriceV2: MoneyV2;
    image: Image;
    selectedOptions: {
        name: string;
        value: string;
    }[];
    unitPrice: MoneyV2;
    unitPriceMeasurement: {
        measuredType: MeasuredType | null;
        quantityUnit: UnitOfMeasurement | null;
        quantityValue: number;
        referenceUnit: UnitOfMeasurement | null;
        referenceValue: number;
    };
}
export interface ShopifyStorefrontProductVariantWithProduct extends ShopifyStorefrontProductVariant {
    product: {
        id: string;
        handle: string;
    };
}
interface ShopifyStorefrontProduct {
    id: string | number;
    availableForSale: boolean;
    createdAt: string;
    updatedAt: string;
    descriptionHtml: string;
    description: string;
    handle: string;
    productType: string;
    title: string;
    vendor: string;
    publishedAt: string;
    onlineStoreUrl: string;
    options: Array<Option>;
    images: Array<Image>;
    variants: Array<ShopifyStorefrontProductVariant>;
}
declare function isStorefrontItem(item: LineItem): item is ShopifyStorefrontLineItem;
export { ShopifyStorefrontLineItem, ShopifyStorefrontProduct, ShopifyStorefrontCart, ShopifyStorefrontProductTrackingData, Meta, DiscountApplication, isStorefrontItem, };
