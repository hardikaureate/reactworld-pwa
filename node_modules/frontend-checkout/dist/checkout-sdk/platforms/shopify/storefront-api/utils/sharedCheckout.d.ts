interface LoadSharedCheckoutDomains {
    sharedCartId: string | null;
}
/**
 * Load `sharedCheckoutDomains` into iframe and wait for them
 * to load and return a valid `sharedCartId`.
 *
 * @param sharedCheckoutDomains - List of domains to load in iframe.
 * @returns A Promise containing `sharedCartId`, being the first `cartId` found
 * from loading `sharedCheckoutDomains`.
 */
export declare function loadSharedCheckoutDomains(sharedCheckoutDomains: string[]): Promise<LoadSharedCheckoutDomains>;
/**
 * Syncs the `cartId` given with `sharedCheckoutDomains` via `window.postMessage`.
 *
 * @param sharedCheckoutDomains - List of domains to load in iframe.
 * @param cartId - Shopify checkout cart id.
 */
export declare function syncCartIdWithSharedDomains(sharedCheckoutDomains: string[], cartId: string): string;
/**
 * Saves the `cartId` given in `storage` and return it.
 *
 * @param cartKey
 * @param cartId
 * @return `cartId` given.
 */
export declare function storeSharedCartId(cartKey: string, cartId: string): string;
export declare const cookieStorage: {
    setItem(name: string, value: string): void;
    getItem(name: string): string;
};
export {};
