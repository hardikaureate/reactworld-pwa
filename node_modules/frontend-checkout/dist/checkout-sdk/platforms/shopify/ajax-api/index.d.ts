import { Meta, ShopifyAjaxProduct, ShopifyAjaxProductVariant } from './types';
import { Platform, Item, ItemId, LineItem, CartUpdates } from '../../../../types';
declare class ShopifyAjaxPlatform implements Platform {
    private storeName;
    constructor(meta: Meta);
    fetchProduct(handle: string | number): Promise<ShopifyAjaxProduct>;
    fetchProductVariant(variantId: string | number): Promise<ShopifyAjaxProductVariant>;
    addItemsToCart(items: Item[]): Promise<import("../../../../types").Cart>;
    updateItemsInCart(items: Item[]): Promise<import("../../../../types").Cart>;
    removeItemsFromCart(itemIds: ItemId[]): Promise<import("../../../../types").Cart>;
    updateCart({ items, note, attributes }: CartUpdates): Promise<import("../../../../types").Cart>;
    getCart(): Promise<import("../../../../types").Cart>;
    getProductTrackingData(item: LineItem): {
        id: number;
        variantId: number;
        name: string;
        brand: string;
        quantity: number;
        price: number;
    };
    getItemIdInPlatformSpecificFormat(itemId: ItemId): number;
}
export default ShopifyAjaxPlatform;
