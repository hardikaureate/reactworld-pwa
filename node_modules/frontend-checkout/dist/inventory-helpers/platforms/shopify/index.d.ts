import { ProductType } from '../../../types';
import { PlatformInventoryHelper, ItemId, StoreConfig } from '../../types';
import { ShopifyInventory } from './types';
declare class ShopifyInventoryHelper implements PlatformInventoryHelper {
    private client;
    private inventory;
    constructor(config: StoreConfig);
    private getStorefrontIdsMap;
    private getProductFromInventory;
    private modifyInventoryResponse;
    private getItemIdInPlatformSpecificFormat;
    fetchProductsInventory(itemIds: ItemId[], productType?: ProductType): Promise<ShopifyInventory>;
    isProductAvailableForSale(itemId: ItemId, productType: ProductType): Promise<boolean>;
    getProductMinOrder(itemId: ItemId, productType: ProductType): Promise<number | undefined>;
    getProductMaxOrder(itemId: ItemId, productType: ProductType): Promise<number | undefined>;
    getProductQuantity(itemId: ItemId, productType: ProductType): Promise<number | undefined>;
    getProductPrice(itemId: ItemId, productType: ProductType): Promise<number | undefined>;
}
export { ShopifyInventoryHelper };
